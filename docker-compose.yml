version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  database:
    image: mongo:latest
    ports:
      - "27017:27017" # Opening for external services
    volumes:
      - /mnt:/data/db
    environment: 
      - MONGO_INITDB_ROOT_USERNAME=root # Always use environment variable and never this!
      - MONGO_INITDB_ROOT_PASSWORD=password 
  stream-processor:
    build: ./SparkProcessor
    depends_on: 
      - zookeeper
      - kafka
    entrypoint: ["python3", "processor.py", "192.168.1.12:32786,192.168.1.12:32787", "kafka-stream-consumer-group"]
  database-processor:
    build: ./DatabaseIngestor
    depends_on: 
      - zookeeper
      - kafka
      - database
    entrypoint: ["python3", "MongoIngestor.py", "192.168.1.12:32786,192.168.1.12:32787", "kafka-database-consumer-group"]
  spark:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
    expose:
      - "7077"
    ports:
      - '8080:8080'
  spark-worker:
    image: bitnami/spark:latest
    depends_on: 
      - spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
  flink:
    image: flink:latest
    expose:
      - "6123"
    ports:
      - "8080:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink
  flink-taskmanager:
    image: flink:latest
    expose:
      - "6121"
      - "6122"
    depends_on:
      - flink
    command: taskmanager
    links:
      - "flink:flink"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink